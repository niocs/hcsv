#!/bin/bash

# Like substr, takes start pos and end pos per field.
# if endpos is negative,  it is counted from the end.

#Usage : cat csvfile | htrim F1=:5 F2=:-1 F3=2: F4=2:3

awk -F , '
BEGIN {
    OFS=","
    split("'"$*"'",args," ");
    for (ii=1; ii <= length(args); ii++) {
        split(args[ii],items,"=");
        if(length(items) != 2) {
            printf("Bad check - %s\n", args[ii])
            exit 1
        }
        fields[ii]=items[1]
	pos=items[2]
        split(items[2],posns,":");
        if(length(posns) != 2) {
            printf("Bad check - %s\n", args[ii])
            exit 1
        }
	if (posns[1] == "") { posns[1]=1 }
        stPos[ii]=posns[1]
        enPos[ii]=posns[2]
    }
}
NR==1 {
    for (ii=1; ii <= length(fields); ii++) {
        for (jj=1; jj <= NF; jj++) {
            if (fields[ii] == $jj) {
                fieldIdx[ii] = jj
            }
        }
        if (length(fieldIdx) != ii) {
            printf("Field not found - %s\n", fields[ii])
            exit 1
        }
    }
    print
}
NR>1 {
    for (ii = 1; ii <= length(fieldIdx); ii++) {
    	spos = stPos[ii]
	epos = enPos[ii]
	if (epos == "") {
	    epos = length($fieldIdx[ii])
        }
        if (epos < 0) {
	    epos = length($fieldIdx[ii]) + epos
 	}
	epos = epos - spos + 1
        $fieldIdx[ii] = substr($fieldIdx[ii],spos,epos)
    }
    print
}
'
